{"version":3,"sources":["Components/Statistics.styled.js","Components/Statistics.jsx","Components/FeedbackOptions.styled.js","Components/FeedbackOptions.jsx","Components/Section.styled.js","Components/Section.jsx","App.js","index.js"],"names":["Item","styled","li","Statistics","this","props","good","neutral","bad","total","positivePercentage","className","Component","Button","button","FeedbackOptions","options","map","option","type","name","onClick","onLeaveFeedback","Title","h2","Section","title","children","App","state","feedbackBtnClick","e","target","setState","prevState","totalFeedbacks","positiveFeedback","Number","parseInt","isNaN","buttonsList","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAEaA,EAAOC,IAAOC,GAAV,0F,OC2BFC,E,4JAxBb,WACE,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,qBAAIC,UAAU,mBAAd,UACE,eAACX,EAAD,CAAMW,UAAU,WAAhB,mBAAkCL,KAClC,eAACN,EAAD,CAAMW,UAAU,WAAhB,sBAAqCJ,KACrC,eAACP,EAAD,CAAMW,UAAU,WAAhB,kBAAiCH,KAEjC,eAACR,EAAD,CAAMW,UAAU,YAAhB,oBAAoCF,KACpC,eAACT,EAAD,CAAMW,UAAU,UAAhB,gCAA8CD,Y,GAX7BE,aCFZC,EAASZ,IAAOa,OAAV,wFCwBJC,E,4JArBb,WAAU,IAAD,OACP,OAAOX,KAAKC,MAAMW,QAAQC,KAAI,SAACC,GAC7B,OACE,cAACL,EAAD,CAEEM,KAAK,SACLC,KAAMF,EACNG,QAAS,EAAKhB,MAAMiB,gBAJtB,SAMGJ,GALIA,U,GALeN,aCFjBW,EAAQtB,IAAOuB,GAAV,gDCkBHC,E,4JAfb,WACE,MAA4BrB,KAAKC,MAAzBqB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,gCACE,cAACJ,EAAD,UAAQG,IACPC,S,GANaf,aC2DPgB,E,4MAzDbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,iBAAmB,SAACC,GAClB,IAAQX,EAASW,EAAEC,OAAXZ,KACR,EAAKa,UAAS,SAACC,GACb,OAAO,eACJd,EAAOc,EAAUd,GAAQ,O,EAKhCe,eAAiB,WACf,MAA+B,EAAKN,MACpC,OADA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBE,mBAAqB,WACnB,MAA+B,EAAKmB,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB4B,EAAmBC,OAAOC,SAC7BhC,GAAQA,EAAOC,EAAUC,GAAQ,KAEpC,OAAO6B,OAAOE,MAAMH,GAAoB,IAAjC,UAA0CA,EAA1C,O,4CAGT,WACE,IAAMI,EAAcC,OAAOC,KAAKtC,KAAKyB,OACrC,OACE,sBAAKlB,UAAU,kBAAf,UACE,eAAC,EAAD,CAASe,MAAM,wBAAf,UACG,IACD,cAAC,EAAD,CACEV,QAASwB,EACTlB,gBAAiBlB,KAAK0B,sBAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SAC6B,IAA1BtB,KAAK+B,iBACJ,sDAEA,cAAC,EAAD,CACE7B,KAAMF,KAAKyB,MAAMvB,KACjBC,QAASH,KAAKyB,MAAMtB,QACpBC,IAAKJ,KAAKyB,MAAMrB,IAChBC,MAAOL,KAAK+B,iBACZzB,mBAAoBN,KAAKM,gC,GAjDrBE,aCAlB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4c29ed0b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  list-style: none;\n  font-size: 15px;\n  line-height: 1.3;\n`;\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Item } from \"./Statistics.styled\";\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n\r\n    return (\r\n      <ul className=\"statisticSection\">\r\n        <Item className=\"goodStat\">Good: {good}</Item>\r\n        <Item className=\"goodStat\">Neutral: {neutral}</Item>\r\n        <Item className=\"goodStat\">Bad: {bad}</Item>\r\n\r\n        <Item className=\"totalStat\">Total: {total}</Item>\r\n        <Item className=\"badStat\">Positive feedback: {positivePercentage}</Item>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.string,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  font-size: 20px;\n  margin: 10px;\n  border-radius: 25%;\n`;\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"./FeedbackOptions.styled\";\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    return this.props.options.map((option) => {\r\n      return (\r\n        <Button\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={this.props.onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </Button>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  font-size: 20px;\n`;\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Title } from \"./Section.styled\";\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const { title, children } = this.props;\r\n    return (\r\n      <div>\r\n        <Title>{title}</Title>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Components/Statistics\";\nimport FeedbackOptions from \"./Components/FeedbackOptions\";\nimport Section from \"./Components/Section\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackBtnClick = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  totalFeedbacks = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positivePercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const positiveFeedback = Number.parseInt(\n      (good / (good + neutral + bad)) * 100\n    );\n    return Number.isNaN(positiveFeedback) ? \"0\" : `${positiveFeedback} %`;\n  };\n\n  render() {\n    const buttonsList = Object.keys(this.state);\n    return (\n      <div className=\"feedbackCounter\">\n        <Section title=\"Please leave feedback\">\n          {\" \"}\n          <FeedbackOptions\n            options={buttonsList}\n            onLeaveFeedback={this.feedbackBtnClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.totalFeedbacks() === 0 ? (\n            <span> No feedback given</span>\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.totalFeedbacks()}\n              positivePercentage={this.positivePercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}